RESPUESTAS DE EXAMEN TEORICO

1.-combineLatest

2.-Con flatMap()
const primera = Observable.of(1).delay(1000).do(i => console.log(i));
const segunda = Observable.of(11).delay(500).do(i => console.log(i));
first.flatMap(() => second).subscribe(()=> console.log('finished'));

3.-Con streams para poder leer archivos de gran tamaÃ±o y ir linea por linea convirtiendo 
en mayusculas con toUpperCase()
const fs = require('fs');
async function logChunks(readable) {
  for await (const chunk of readable) {
    console.log(chunk);
   writeStream.write(chunk.toUpperCase());
  }
}

const writeStream = fs.createWriteStream('file2.txt',{encoding:'utf-8'});
const readable = fs.createReadStream('file1.txt', {encoding: 'utf8'});
logChunks(readable);


4.-
let arr = ['hola', 'mundo', 'es', 'una', 'prueba'];
let res = [];
let i=0;
arr.forEach(item =>{
      if(arr[i].length > 2){
        res.push(arr[i].length);
     
    }
  i++
})
 console.log(res);
 
 5.- Utilizamos el metodo set para colocar valores unicos despues el metodo sort para mostrar en el orden ascendente
 y para evitar el error de que los toma como strings los restamos del siguiente modo
 
const arr = [5,0,1,2,20,4,1,3,1,2,3]

let uniqueArr = [...new Set(arr)]

console.log(uniqueArr.sort((item1,item2) => item1 - item2))


 
 
